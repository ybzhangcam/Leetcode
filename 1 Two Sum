//Approach 1  brute force
int* twoSum(int* nums, int numsSize, int target)
{
	int *sol = (int*)malloc(sizeof(int) * 2);
	int i, j;
	for (i = 1; i < numsSize; i++)
		for (j = 0; j < i; j++)
			if (nums[j] == target - nums[i])
			{
				sol[0] = j; sol[1] = i;
				return sol;
			}
	return NULL;
}

//Approach 2 one pass unordered_map
class Solution {
public:
	vector<int> twoSum(vector<int>& nums, int target) {
		unordered_map<int, int> map;
		for (int i = 0; i < nums.size(); i++) 
			if (map.count(target - nums[i])) return { map[target - nums[i]], i }; 
			else map[nums[i]] = i;
			return {};
	}
};
